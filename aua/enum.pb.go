// Code generated by protoc-gen-go. DO NOT EDIT.
// source: aua/enum.proto

package aua // import "gitlab.bull-b.com/aua/aua-proto/aua"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Contract-status 合约状态
type ContractStatus int32

const (
	ContractStatus_ContractStatus_Invalid ContractStatus = 0
	ContractStatus_InIssuing              ContractStatus = 1
	ContractStatus_Executed               ContractStatus = 2
	ContractStatus_IncomePeriod           ContractStatus = 3
	ContractStatus_IncomeEarned           ContractStatus = 4
	ContractStatus_WaitingDelivery        ContractStatus = 5
	ContractStatus_Delivered              ContractStatus = 6
)

var ContractStatus_name = map[int32]string{
	0: "ContractStatus_Invalid",
	1: "InIssuing",
	2: "Executed",
	3: "IncomePeriod",
	4: "IncomeEarned",
	5: "WaitingDelivery",
	6: "Delivered",
}
var ContractStatus_value = map[string]int32{
	"ContractStatus_Invalid": 0,
	"InIssuing":              1,
	"Executed":               2,
	"IncomePeriod":           3,
	"IncomeEarned":           4,
	"WaitingDelivery":        5,
	"Delivered":              6,
}

func (x ContractStatus) String() string {
	return proto.EnumName(ContractStatus_name, int32(x))
}
func (ContractStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enum_d58d6a96f825ce90, []int{0}
}

type ContractBurnStatus int32

const (
	ContractBurnStatus_ContractBurnStatus_Invalid ContractBurnStatus = 0
	ContractBurnStatus_NotDestroyed               ContractBurnStatus = 1
	ContractBurnStatus_HadDestroyed               ContractBurnStatus = 2
)

var ContractBurnStatus_name = map[int32]string{
	0: "ContractBurnStatus_Invalid",
	1: "NotDestroyed",
	2: "HadDestroyed",
}
var ContractBurnStatus_value = map[string]int32{
	"ContractBurnStatus_Invalid": 0,
	"NotDestroyed":               1,
	"HadDestroyed":               2,
}

func (x ContractBurnStatus) String() string {
	return proto.EnumName(ContractBurnStatus_name, int32(x))
}
func (ContractBurnStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enum_d58d6a96f825ce90, []int{1}
}

type ContractType int32

const (
	ContractType_ContractType_Invalid ContractType = 0
	ContractType_Normal               ContractType = 1
	ContractType_Virtual              ContractType = 2
)

var ContractType_name = map[int32]string{
	0: "ContractType_Invalid",
	1: "Normal",
	2: "Virtual",
}
var ContractType_value = map[string]int32{
	"ContractType_Invalid": 0,
	"Normal":               1,
	"Virtual":              2,
}

func (x ContractType) String() string {
	return proto.EnumName(ContractType_name, int32(x))
}
func (ContractType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enum_d58d6a96f825ce90, []int{2}
}

// Application-status 申请状态
type ApplicationStatus int32

const (
	ApplicationStatus_Application_NoDocument ApplicationStatus = 0
	ApplicationStatus_Application_Verifying  ApplicationStatus = 1
	ApplicationStatus_Application_Issue      ApplicationStatus = 2
	ApplicationStatus_Application_Approved   ApplicationStatus = 3
	ApplicationStatus_Application_Rejected   ApplicationStatus = 4
)

var ApplicationStatus_name = map[int32]string{
	0: "Application_NoDocument",
	1: "Application_Verifying",
	2: "Application_Issue",
	3: "Application_Approved",
	4: "Application_Rejected",
}
var ApplicationStatus_value = map[string]int32{
	"Application_NoDocument": 0,
	"Application_Verifying":  1,
	"Application_Issue":      2,
	"Application_Approved":   3,
	"Application_Rejected":   4,
}

func (x ApplicationStatus) String() string {
	return proto.EnumName(ApplicationStatus_name, int32(x))
}
func (ApplicationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enum_d58d6a96f825ce90, []int{3}
}

// Application-type 申请类型
type ApplicationType int32

const (
	ApplicationType_ApplicationType_Invalid   ApplicationType = 0
	ApplicationType_Application_Deposit       ApplicationType = 1
	ApplicationType_Application_Withdraw_Cash ApplicationType = 2
	ApplicationType_Application_Withdraw_Gold ApplicationType = 3
)

var ApplicationType_name = map[int32]string{
	0: "ApplicationType_Invalid",
	1: "Application_Deposit",
	2: "Application_Withdraw_Cash",
	3: "Application_Withdraw_Gold",
}
var ApplicationType_value = map[string]int32{
	"ApplicationType_Invalid":   0,
	"Application_Deposit":       1,
	"Application_Withdraw_Cash": 2,
	"Application_Withdraw_Gold": 3,
}

func (x ApplicationType) String() string {
	return proto.EnumName(ApplicationType_name, int32(x))
}
func (ApplicationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enum_d58d6a96f825ce90, []int{4}
}

// Receipt-status  收据状态
type ReceiptStatus int32

const (
	ReceiptStatus_ReceiptStatus_Invalid ReceiptStatus = 0
	ReceiptStatus_WaitClientIssue       ReceiptStatus = 1
	ReceiptStatus_AlreadyIssued         ReceiptStatus = 2
	ReceiptStatus_Obsoleted             ReceiptStatus = 3
)

var ReceiptStatus_name = map[int32]string{
	0: "ReceiptStatus_Invalid",
	1: "WaitClientIssue",
	2: "AlreadyIssued",
	3: "Obsoleted",
}
var ReceiptStatus_value = map[string]int32{
	"ReceiptStatus_Invalid": 0,
	"WaitClientIssue":       1,
	"AlreadyIssued":         2,
	"Obsoleted":             3,
}

func (x ReceiptStatus) String() string {
	return proto.EnumName(ReceiptStatus_name, int32(x))
}
func (ReceiptStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enum_d58d6a96f825ce90, []int{5}
}

type ReceiptType int32

const (
	ReceiptType_ReceiptType_Invalid ReceiptType = 0
	ReceiptType_NormalReceipt       ReceiptType = 1
	ReceiptType_EmptyReceipt        ReceiptType = 2
)

var ReceiptType_name = map[int32]string{
	0: "ReceiptType_Invalid",
	1: "NormalReceipt",
	2: "EmptyReceipt",
}
var ReceiptType_value = map[string]int32{
	"ReceiptType_Invalid": 0,
	"NormalReceipt":       1,
	"EmptyReceipt":        2,
}

func (x ReceiptType) String() string {
	return proto.EnumName(ReceiptType_name, int32(x))
}
func (ReceiptType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enum_d58d6a96f825ce90, []int{6}
}

// COntract Operation 合约操作
type ContractOperation int32

const (
	ContractOperation_ContractOperation_Invalid ContractOperation = 0
	ContractOperation_ApplyReplenishment        ContractOperation = 1
	ContractOperation_ConfirmReplenishment      ContractOperation = 2
	ContractOperation_ApplyDeliver              ContractOperation = 3
	ContractOperation_ConfirmDelivery           ContractOperation = 4
)

var ContractOperation_name = map[int32]string{
	0: "ContractOperation_Invalid",
	1: "ApplyReplenishment",
	2: "ConfirmReplenishment",
	3: "ApplyDeliver",
	4: "ConfirmDelivery",
}
var ContractOperation_value = map[string]int32{
	"ContractOperation_Invalid": 0,
	"ApplyReplenishment":        1,
	"ConfirmReplenishment":      2,
	"ApplyDeliver":              3,
	"ConfirmDelivery":           4,
}

func (x ContractOperation) String() string {
	return proto.EnumName(ContractOperation_name, int32(x))
}
func (ContractOperation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enum_d58d6a96f825ce90, []int{7}
}

// IncomeStatus 收益状态
type IncomeStatus int32

const (
	IncomeStatus_IncomeStatus_Invalid IncomeStatus = 0
	IncomeStatus_Imcomed              IncomeStatus = 1
	IncomeStatus_BreakContract        IncomeStatus = 2
	IncomeStatus_ApplyContract        IncomeStatus = 3
)

var IncomeStatus_name = map[int32]string{
	0: "IncomeStatus_Invalid",
	1: "Imcomed",
	2: "BreakContract",
	3: "ApplyContract",
}
var IncomeStatus_value = map[string]int32{
	"IncomeStatus_Invalid": 0,
	"Imcomed":              1,
	"BreakContract":        2,
	"ApplyContract":        3,
}

func (x IncomeStatus) String() string {
	return proto.EnumName(IncomeStatus_name, int32(x))
}
func (IncomeStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enum_d58d6a96f825ce90, []int{8}
}

type ProgressType int32

const (
	ProgressType_ProgressType_Invalid ProgressType = 0
	ProgressType_Extract              ProgressType = 1
	ProgressType_Exchange             ProgressType = 2
)

var ProgressType_name = map[int32]string{
	0: "ProgressType_Invalid",
	1: "Extract",
	2: "Exchange",
}
var ProgressType_value = map[string]int32{
	"ProgressType_Invalid": 0,
	"Extract":              1,
	"Exchange":             2,
}

func (x ProgressType) String() string {
	return proto.EnumName(ProgressType_name, int32(x))
}
func (ProgressType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enum_d58d6a96f825ce90, []int{9}
}

func init() {
	proto.RegisterEnum("aua.ContractStatus", ContractStatus_name, ContractStatus_value)
	proto.RegisterEnum("aua.ContractBurnStatus", ContractBurnStatus_name, ContractBurnStatus_value)
	proto.RegisterEnum("aua.ContractType", ContractType_name, ContractType_value)
	proto.RegisterEnum("aua.ApplicationStatus", ApplicationStatus_name, ApplicationStatus_value)
	proto.RegisterEnum("aua.ApplicationType", ApplicationType_name, ApplicationType_value)
	proto.RegisterEnum("aua.ReceiptStatus", ReceiptStatus_name, ReceiptStatus_value)
	proto.RegisterEnum("aua.ReceiptType", ReceiptType_name, ReceiptType_value)
	proto.RegisterEnum("aua.ContractOperation", ContractOperation_name, ContractOperation_value)
	proto.RegisterEnum("aua.IncomeStatus", IncomeStatus_name, IncomeStatus_value)
	proto.RegisterEnum("aua.ProgressType", ProgressType_name, ProgressType_value)
}

func init() { proto.RegisterFile("aua/enum.proto", fileDescriptor_enum_d58d6a96f825ce90) }

var fileDescriptor_enum_d58d6a96f825ce90 = []byte{
	// 586 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xcb, 0x6e, 0xdb, 0x3a,
	0x14, 0x8c, 0xa4, 0xdc, 0xe4, 0xe6, 0xc4, 0x4e, 0x68, 0xe6, 0x9d, 0xa2, 0xdd, 0x14, 0xdd, 0x08,
	0x48, 0xb2, 0xe8, 0x17, 0xf8, 0x85, 0xd6, 0x28, 0xe0, 0x04, 0x6e, 0x91, 0x14, 0xed, 0xc2, 0xa0,
	0xa5, 0x13, 0x9b, 0x2d, 0x45, 0x0a, 0x14, 0xe5, 0x46, 0x1f, 0xd0, 0x55, 0x57, 0x5d, 0xf4, 0x7f,
	0x0b, 0xea, 0x11, 0xd3, 0x09, 0xba, 0xd3, 0x99, 0xb1, 0xc6, 0x67, 0x46, 0x43, 0xc2, 0x1e, 0xcb,
	0xd9, 0x15, 0xca, 0x3c, 0xb9, 0x4c, 0xb5, 0x32, 0x8a, 0x06, 0x2c, 0x67, 0xe1, 0x6f, 0x0f, 0xf6,
	0xfa, 0x4a, 0x1a, 0xcd, 0x22, 0xf3, 0xd1, 0x30, 0x93, 0x67, 0xf4, 0x1c, 0x8e, 0xd7, 0x91, 0xe9,
	0x48, 0x2e, 0x99, 0xe0, 0x31, 0xd9, 0xa0, 0x6d, 0xd8, 0x19, 0xc9, 0x51, 0x96, 0xe5, 0x5c, 0xce,
	0x89, 0x47, 0x5b, 0xf0, 0xff, 0xf0, 0x01, 0xa3, 0xdc, 0x60, 0x4c, 0x7c, 0x4a, 0xa0, 0x35, 0x92,
	0x91, 0x4a, 0xf0, 0x06, 0x35, 0x57, 0x31, 0x09, 0x56, 0xc8, 0x90, 0x69, 0x89, 0x31, 0xd9, 0xa4,
	0x07, 0xb0, 0x7f, 0xc7, 0xb8, 0xe1, 0x72, 0x3e, 0x40, 0xc1, 0x97, 0xa8, 0x0b, 0xf2, 0x9f, 0x55,
	0xad, 0x27, 0x8c, 0xc9, 0x56, 0xf8, 0x19, 0x68, 0xb3, 0x40, 0x2f, 0xd7, 0xb2, 0x5e, 0xeb, 0x15,
	0x9c, 0x3f, 0x47, 0x9d, 0xd5, 0x08, 0xb4, 0xc6, 0xca, 0x0c, 0x30, 0x33, 0x5a, 0x15, 0x18, 0x13,
	0xcf, 0x22, 0xef, 0x59, 0xbc, 0x42, 0xfc, 0xb0, 0x0b, 0xad, 0x46, 0xe3, 0x53, 0x91, 0x22, 0x3d,
	0x85, 0x43, 0x77, 0x76, 0xd4, 0x00, 0xb6, 0xc6, 0x4a, 0x27, 0x4c, 0x10, 0x8f, 0xee, 0xc2, 0xf6,
	0x2d, 0xd7, 0x26, 0x67, 0x82, 0xf8, 0xe1, 0x1f, 0x0f, 0x3a, 0xdd, 0x34, 0x15, 0x3c, 0x62, 0x86,
	0x2b, 0xb9, 0xca, 0xcc, 0x01, 0xa7, 0x63, 0x35, 0x50, 0x51, 0x9e, 0xa0, 0x34, 0x64, 0x83, 0x9e,
	0xc1, 0x91, 0xcb, 0xdd, 0xa2, 0xe6, 0xf7, 0x45, 0x95, 0xdf, 0xd1, 0x9a, 0xd6, 0xd4, 0x06, 0x8b,
	0xc4, 0xb7, 0x6b, 0xb9, 0x70, 0x37, 0x4d, 0xb5, 0x5a, 0xa2, 0x0d, 0xf4, 0x09, 0x33, 0xc1, 0x6f,
	0x18, 0xd9, 0xf0, 0x37, 0xc3, 0x9f, 0x1e, 0xec, 0x3b, 0x54, 0x69, 0xef, 0x05, 0x9c, 0x3c, 0x81,
	0x1c, 0x87, 0x27, 0x70, 0xe0, 0x4a, 0x0d, 0x30, 0x55, 0x19, 0x37, 0xc4, 0xa3, 0x2f, 0xe1, 0xcc,
	0x25, 0xee, 0xb8, 0x59, 0xc4, 0x9a, 0xfd, 0x98, 0xf6, 0x59, 0xb6, 0x20, 0xfe, 0x3f, 0xe9, 0x77,
	0x4a, 0xc4, 0x24, 0x08, 0x19, 0xb4, 0x27, 0x18, 0x21, 0x4f, 0x9b, 0x3a, 0x9d, 0xc1, 0xd1, 0x1a,
	0xe0, 0xac, 0x50, 0x97, 0xa1, 0x2f, 0x38, 0x4a, 0x53, 0x99, 0xf7, 0x68, 0x07, 0xda, 0x5d, 0xa1,
	0x91, 0xc5, 0x45, 0x89, 0xd8, 0x62, 0xb5, 0x61, 0xe7, 0x7a, 0x96, 0x29, 0x81, 0xd6, 0x6a, 0x10,
	0x7e, 0x80, 0xdd, 0x5a, 0xb1, 0x74, 0x79, 0x02, 0x07, 0xce, 0xe8, 0xc8, 0x77, 0xa0, 0x5d, 0x7d,
	0xc3, 0x9a, 0xae, 0x2a, 0x31, 0x4c, 0x52, 0x53, 0x34, 0x88, 0x1f, 0xfe, 0xf2, 0xa0, 0xd3, 0x74,
	0xe0, 0x3a, 0x45, 0x5d, 0xba, 0xb2, 0x26, 0x9f, 0x81, 0x8e, 0xf2, 0x31, 0x50, 0x9b, 0x41, 0x31,
	0xc1, 0x54, 0xa0, 0xe4, 0xd9, 0xa2, 0xfc, 0xd4, 0x5e, 0xdd, 0xa7, 0x7b, 0xae, 0x93, 0x75, 0xa6,
	0x3c, 0x1b, 0xe5, 0x1b, 0x75, 0xcf, 0x49, 0x60, 0xcd, 0xd7, 0xbf, 0x7d, 0x3c, 0x09, 0x9b, 0xe1,
	0xd7, 0xe6, 0xc0, 0xd4, 0xe1, 0x9d, 0xc2, 0xa1, 0x3b, 0x3b, 0x2b, 0xec, 0xc2, 0xf6, 0x28, 0xb1,
	0x4c, 0x5c, 0x65, 0xd6, 0xd3, 0xc8, 0xbe, 0x37, 0x3b, 0x13, 0xbf, 0x8c, 0xd1, 0xfe, 0xe1, 0x23,
	0x14, 0x84, 0x7d, 0x68, 0xdd, 0x68, 0x35, 0xd7, 0x98, 0x65, 0x4d, 0xfb, 0xdd, 0x79, 0x5d, 0x7c,
	0xf8, 0x50, 0xbd, 0x56, 0x1f, 0xf2, 0x68, 0xc1, 0xe4, 0x1c, 0x89, 0xdf, 0x7b, 0xf3, 0xe5, 0xf5,
	0x9c, 0x1b, 0xc1, 0x66, 0x97, 0xb3, 0x5c, 0x88, 0x8b, 0xd9, 0x65, 0xa4, 0x92, 0x2b, 0x7b, 0xb3,
	0xb0, 0x9c, 0x5d, 0x94, 0x17, 0x8b, 0x7d, 0x9a, 0x6d, 0x95, 0x8f, 0x6f, 0xff, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x00, 0xa2, 0xa2, 0x69, 0x75, 0x04, 0x00, 0x00,
}
